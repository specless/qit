@mixin sp-input($color: null, $include-default: true) {
  @if $color != null {
    $focusColor: 'primary';
    @if $include-default == true {
      @include sp-bg-overlay-light(4);
      @include sp-border-overlay-dark(3);
      @include sp-border-width(thin);
      @include sp-border-style(solid);
      @include sp-shadow(low, inset 0 0 .4em .07em);

      @include sp-state(hover) {
        @include sp-bg-overlay-light(5);
        @include sp-border-overlay-dark(4);
      }

      @include sp-state(focus) {
        @include sp-bg-overlay-light(5);
        @include sp-border-color($focusColor);
      }

      @include sp-state(disabled) {
        @include sp-bg-overlay-dark(1);
        @include sp-border-overlay-dark(2);
        @include sp-shadow(none);
      }

      @include sp-state(dark) {
        @include sp-bg-overlay-dark(2);
        @include sp-border-overlay-dark(3);
        @include sp-shadow(medium, inset 0 0 .4em .07em);

        @include sp-state(hover) {
          @include sp-bg-overlay-dark(3);
          @include sp-border-overlay-light(2);
        }

        @include sp-state(focus) {
          @include sp-bg-overlay-dark(3);
          @include sp-border-color($focusColor);
        }

        @include sp-state(disabled) {
          @include sp-border-overlay-light(2);
          @include sp-shadow(none);
        }
      }
    }
    @if $color != 'base' {
      // @include sp-state-focus {
        @include sp-border-color($color);
      // }
    }
  } @else {
    @include sp-input(base);
    @include sp-primary {
      @include sp-input(primary, false);
    }
    @include sp-success {
      @include sp-input(success, false)
    }
    @include sp-warning {
      @include sp-input(warning, false)
    }
    @include sp-danger {
      @include sp-input(danger, false)
    }
  }
}

@mixin sp-input-minimal($color: null, $include-default: true) {
  @if $color != null {
    $focusColor: 'primary';
    @if $include-default == true {
      border: none;
      @include sp-border-width(thin, bottom);
      @include sp-border-style(dashed, bottom);
      border-color: transparent;
      background-image: none;

      @include  sp-state(hover) {
        border-color: $sp-shade-dark-3;
      }

      @include sp-state(focus) {
        @include sp-border-color($focusColor);
      }

      @include sp-state(disabled) {
        border-color: transparent;
      }

      @include sp-state(dark) {

        @include  sp-state(hover) {
          border-color: $sp-shade-light-3;
        }

        @include sp-state(focus) {
          @include sp-border-color($focusColor);
        }

        @include sp-state(disabled) {
          border-color: transparent
        }
      }
    }
    @if $color != 'base' {
      @include sp-state-focus {
        @include sp-border-color($color);
      }
    }
  } @else {
    @include sp-input-minimal(base);
    @include sp-primary {
      @include sp-input-minimal(primary, false)
    }
    @include sp-success {
      @include sp-input-minimal(success, false)
    }
    @include sp-warning {
      @include sp-input-minimal(warning, false)
    }
    @include sp-danger {
      @include sp-input-minimal(danger, false)
    }
  }
}

.sp-input:not(.sp-minimal) {
  @include sp-input;
}

.sp-input.sp-minimal {
  @include sp-input-minimal;
}